
@{
    ViewBag.Title = "ShowScenery";
}

<h2>ShowScenery</h2>
<link href="~/Content/ElementUI/element-ui.css" rel="stylesheet" />
<script src="~/Scripts/vue.js"></script>
<script src="~/Scripts/ElementUI/element-ui.js"></script>
<script src="~/axios-master/dist/axios.js"></script>
<div id='app'>
    <template>
        <el-table :data="tableData"
                  style="width: 100%">
            <el-table-column prop="S_Name"
                             label="景点名称"
                             width="90">
            </el-table-column>
            <el-table-column prop="S_Genus_Prov"
                             label="省"
                             width="90">
            </el-table-column>
            <el-table-column prop="S_Genus_City"
                             label="市"
                             width="90">
            </el-table-column>
            <el-table-column prop="S_Genus_Coun"
                             label="县"
                             width="90">
            </el-table-column>
            <el-table-column prop="S_Level"
                             label="等级"
                             width="90">
            </el-table-column>
            <el-table-column prop="S_Type"
                             label="类型"
                             width="90">
            </el-table-column>
            <el-table-column prop="S_Fit"
                             label="适合"
                             width="90">
            </el-table-column>
            <el-table-column prop="S_Grade"
                             label="评分"
                             width="90">
            </el-table-column>
            <el-table-column prop="S_Price"
                             label="价格"
                             width="90">
            </el-table-column>
            <el-table-column prop="S_Introduction"
                             label="介绍"
                             width="200">
            </el-table-column>

            <el-table-column label="操作">

                <template slot-scope="scope">
                    <!--弹出层修改-->
                    <el-button type="primary" icon="el-icon-edit" circle @@click="updateShow(scope.row,scope.$index)"></el-button>
                    <!--弹出层修改-->
                    <!--带提示的删除-->
                    <el-popover placement="right" title="删除提示" width="200" trigger="click" v-model="scope.row.visible2">
                        <div>确认删除吗？</div>
                        <el-button size="mini" @@click='scope.row.visible2=false'>取消</el-button>
                        <el-button size="mini" @@click='del(scope.$index,scope.row)'>删除</el-button>

                        <el-button slot="reference" type="danger" icon="el-icon-delete" circle></el-button>

                    </el-popover>

                    <!--带提示的删除-->
                </template>

            </el-table-column>
        </el-table>

        <!--修改表单-->
        <el-dialog title="提示"
                   :visible.sync="dialogVisible"
                   width="40%"
                   :before-close="handleClose">
            <span>修改窗口</span>
            <span slot="footer" class="dialog-footer">
                <!--修改表单-->
                <el-form ref="form" :model="updData" label-width="80px">
                    <el-form-item label="景点名称">
                        <el-input v-model="updData.S_Name"></el-input>
                    </el-form-item>
                    <el-form-item label="省">
                        <el-select v-model="updData.S_Genus_Prov" @@change="DuoJi" placeholder="请选择活动区域">
                            <el-option v-for="item in Prov"
                                       :key="item.R_Id"
                                       :label="item.R_Name"
                                       :value="item.R_Id">
                            </el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item label="市">
                        <el-select v-model="updData.S_Genus_City" @@change="DuoJi1" placeholder="请选择活动区域">
                            <el-option v-for="item in City"
                                       :key="item.R_Id"
                                       :label="item.R_Name"
                                       :value="item.R_Id">
                            </el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item label="县">
                        <el-select v-model="updData.S_Genus_Coun" placeholder="请选择活动区域">
                            <el-option v-for="item in Coun"
                                       :key="item.R_Id"
                                       :label="item.R_Name"
                                       :value="item.R_Id">
                        </el-select>
                    </el-form-item>
                    <el-form-item label="等级">
                        <el-select v-model="updData.S_Level" placeholder="请选择活动区域">
                            <el-option label="5A" value="5A"></el-option>
                            <el-option label="4A" value="4A"></el-option>
                            <el-option label="3A" value="3A"></el-option>
                            <el-option label="2A" value="2A"></el-option>
                            <el-option label="1A" value="1A"></el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item label="景区类型">
                        <el-select v-model="updData.S_Type" placeholder="请选择活动区域">
                            <el-option v-for="item in Type"
                                       :key="item.S_Id"
                                       :label="item.S_Name"
                                       :value="item.S_Id">
                            </el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item label="适合人群">
                        <el-input v-model="updData.S_Fit"></el-input>
                    </el-form-item>
                    <el-form-item label="价格">
                        <el-input v-model="updData.S_Price"></el-input>
                    </el-form-item>
                    <el-form-item label="介绍">
                        <el-input type="textarea" v-model="updData.S_Introduction"></el-input>
                    </el-form-item>
                    <el-form-item>
                        <el-upload action="/SceneryHoliday/AddPhoto"
                                   list-type="picture-card"
                                   :on-preview="handlePictureCardPreview"
                                   :on-remove="handleRemove"
                                   name="file">
                            <i class="el-icon-plus"></i>
                        </el-upload>
                        <el-dialog :visible.sync="dialogVisible1" size="tiny">
                            <img width="100%" :src="updData.S_Photo" alt="">
                        </el-dialog>
                    </el-form-item>

                    <el-form-item>
                        <el-button @@click="cancel">取 消</el-button>
                        <el-button type="primary" @@click="saveData">确 定</el-button>
                    </el-form-item>
                </el-form>

            </span>
        </el-dialog>
        <!--修改表单-->
    </template>


</div>


<script>
    window.onload = function () {
        var vm = new Vue({
            el: '#app',
            data: {
                dialogVisible1: false,
                Type: [],
                Prov: [],
                City: [],
                Coun: [],
                tableData: [],//列表数据
                dialogVisible: false,//修改提示框显示开关
                visible2: false,//删除提示框显示开关
                beforeDate: '',//修改前数据
                updIndex: -1,//修改的数据索引
                updData: {}//修改表单反填数据
            },
            created: function () {
                var self = this;
                axios.get('http://localhost:61521/api/SceneryHolidayApi/ShowScenery').then(function (res) {
                    console.log(res.data);
                    self.tableData = res.data;
                }).catch(function (err) {
                    console.log(err.data)
                })
                
                //显而易见 这里应该发送ajax初始化数据的 axios.get
            },
            methods: {
                handleRemove(file, fileList) {
                    console.log(file, fileList);
                },
                handlePictureCardPreview(file) {
                    console.log(file.response);
                    this.tableData.S_Photo = file.response;
                    this.dialogVisible1 = true;
                },
                DuoJi(n) {
                    this.tableData.S_Genus_City = '';
                    this.tableData.S_Genus_Coun = '';
                    var self = this;
                    axios.get("http://localhost:61521/api/UserInfoApi/ShowRegion?Id=" + n).then(function (res) {
                        self.City = res.data;
                        console.log(self.City);
                    }).catch(function (err) {
                        console.log(err);
                        console.log(err.data)
                    })
                },
                DuoJi1(n) {
                    this.tableData.S_Genus_Coun = '';
                    var self = this;
                    axios.get("http://localhost:61521/api/UserInfoApi/ShowRegion?Id=" + n).then(function (res) {
                        self.Coun = res.data;
                        console.log(self.Coun);
                    }).catch(function (err) {
                        console.log(err);
                        console.log(err.data)
                    })
                },
                //删除数据
                del: function (index, row) {
                    //移除数组指定位置的数据
                    this.tableData.splice(index, 1);
                    //发送ajax请求 删除数据库数据

                    //隐藏提示框
                    row.visible2 = false;
                }, handleClose(done) {
                    this.$confirm('确认关闭？')
                        .then(_ => {
                            this.tableData.splice(this.updIndex, 1, JSON.parse(this.beforeDate));//还原修改前显示
                            done();
                        })
                        .catch(_ => { });
                },
                updateShow: function (data, index) {
                    var self = this;
                    console.log(data);
                    this.updIndex = index;
                    this.beforeDate = JSON.stringify(data);//存储原始数据 若点击取消 需要还原时使用
                    //数据反填到修改表单
                    this.updData = data;
                    axios.get("http://localhost:61521/api/SceneryHolidayApi/ShowSceneryType").then(function (res) {
                        self.Type = res.data;
                        console.log(self.Type);
                    }).catch(function (err) {
                        console.log(err);
                        console.log(err.data)
                    })
                    axios.get("http://localhost:61521/api/UserInfoApi/ShowRegion").then(function (res) {
                        self.Prov = res.data;
                        console.log(self.Prov);
                    }).catch(function (err) {
                        console.log(err);
                        console.log(err.data)
                        })
                    axios.get("http://localhost:61521/api/UserInfoApi/ShowRegion?Id=" + self.updData.S_Genus_Prov).then(function (res) {
                        self.City = res.data;
                        console.log(self.City);
                    }).catch(function (err) {
                        console.log(err);
                        console.log(err.data)
                        })
                    axios.get("http://localhost:61521/api/UserInfoApi/ShowRegion?Id=" + self.updData.S_Genus_City).then(function (res) {
                        self.Coun = res.data;
                        console.log(self.Coun);
                    }).catch(function (err) {
                        console.log(err);
                        console.log(err.data)
                    })
                    
                    //显示修改表单
                    this.dialogVisible = true;
                },
                saveData: function () {
                    console.log(this.updData);
                    //发送ajax请求 修改数据

                    //隐藏修改表单
                    this.dialogVisible = false;
                },
                timeChange: function (val) {
                    //处理DatePicker的时间反填含引号问题
                    this.updData.date = val.replace('”', '').replace('”', '').trim();
                }, cancel: function () {
                    this.tableData.splice(this.updIndex, 1, JSON.parse(this.beforeDate));//还原修改前显示
                    this.dialogVisible = false;//隐藏修改窗口
                }
            }
        })
    }
</script>